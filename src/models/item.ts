/**
 * Treum Platform APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  dict,
  lazy,
  nullable,
  number,
  object,
  optional,
  Schema,
  string,
  unknown,
} from '../schema';
import { Listing, listingSchema } from './listing';
import { Media, mediaSchema } from './media';
import { RoyaltyInfo, royaltyInfoSchema } from './royaltyInfo';
import { TokenContract, tokenContractSchema } from './tokenContract';
import { TokenStatusEnum, tokenStatusEnumSchema } from './tokenStatusEnum';

export interface Item {
  attributes?: Record<string, unknown> | null;
  id: string;
  itemTypeId?: string;
  listing?: Listing;
  media: Media;
  productId: string;
  royaltyInfo: RoyaltyInfo;
  tokenContract: TokenContract;
  tokenId: number;
  tokenStatus: TokenStatusEnum;
  tokensAvailable: number;
}

export const itemSchema: Schema<Item> = object({
  attributes: ['attributes', nullable(dict(unknown()))],
  id: ['id', string()],
  itemTypeId: ['item_type_id', optional(string())],
  listing: ['listing', optional(lazy(() => listingSchema))],
  media: ['media', lazy(() => mediaSchema)],
  productId: ['product_id', string()],
  royaltyInfo: ['royalty_info', lazy(() => royaltyInfoSchema)],
  tokenContract: ['token_contract', lazy(() => tokenContractSchema)],
  tokenId: ['token_id', number()],
  tokenStatus: ['token_status', tokenStatusEnumSchema],
  tokensAvailable: ['tokens_available', number()],
});
